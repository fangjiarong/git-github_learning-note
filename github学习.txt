github介绍：
    github是一个git项目托管网站
        hub大楼
    社交化编程   social coding


github远程仓库的使用：【四种场景】
    1.关联
        本地有仓库，要和远程仓库做关联
        1.1在本地仓库：
            git init
            git add
            git commit -m 'xxxx'
        1.2在远程仓库：
            在github上创建一个远程仓库
                点+号，new repository
                仓库名：数字字母下划线，不能是中文
                描述部分可以为中文
                readme.md文件的勾勾去掉
                仓库地址：出现https地址和ssh地址
        1.3回到本地仓库：
            git remote add origin http：//github.com/xpromise/oa.git(HTTPS)

                “”“
                remote=远程的
                add=添加
                origin=默认的远程库别名【唯一可以修改的地方】
                “”“

        备注：若关联错误：
            1.删除.git文件夹，重新建立本地仓库1.1
            2.git remote remove origin 再在重新关联仓库

    2.推送
        本地有仓库有内容，要推送给远程库
        git push -u origin master(首次加-u，可以不加)(推送到远程仓库的master分支)
        根据提示输入用户名密码
        正常情况下，成功推送一次后，电脑会记住账户和密码，若不能自动记住
            git config --global credential.helper store

    3.拉取
        本地仓库有内容，获取远程新内容
            远程库也开添加新的内容：create new file可以新建文件
        第一种拉取方式：git pull origin master
            将远程仓库的master分支上代码版本复制、合并到本地master分支上
            会存在合并冲突
        第二种拉取方式：git fetch origin master：tmp
            新建一个tmp分支，将远程仓库的master分支上代码复制到tmp分支上，不会自动合并
            现实中少用
                “”“
                fetch 取来
                “”“

    4.克隆
        本地不仓库，要获取一个完整的远程仓库
            下载压缩包没有.git文件，不能上传下载修改
        备注：只在第一次获取远程仓库时才需要克隆(HTTPS)
        git clone http://github.com/xxx.git
            克隆之后文件夹中会有.git文件

带有分支的克隆，拉取，推送【特殊场景处理】
    首先创建远程仓库的分支
            在远程仓库的分支按钮中增加或者查找branch---》switch branch---》输入新的仓库名称---》点击create创建

    带有分支的克隆
            克隆是是整个仓库，而不是一个分支，克隆下来后不能通过git branch查看，但可以通过切换，切换后可以查看分支

    带有分支的拉取
            若要把远程仓库的新的分支拉取下来，可通过git pull操作，拉取新的分支到本地

    带有分支的推送
            推送到相应的分支git push origin test

github网站掌握的三个部分：
    1.新建仓库
    2.新建组织
        公司项目多人协作
    3.开源项目多人协作
        folk功能实现

github页面描述：
    右上角的头像部分：
        your profile    你的主页
        status      设置状态
        overview        总体视图，访问较多影响较大的

    主页右上角的加号：
        new repository
        new gist
        new organization
            创建团队，里面多个成员，不需账户和密码就可以访问仓库
            选择my personal account
            可以更改职位member或者owner，也可以移出成员
        new project

    在某个仓库中
        project 项目排版，不用
        code
            里面是仓库文件
        wiki    代替README.md，可以编辑项目说明书
        security    用到第三方的包，可以显示报错地方
        insights
            contributors    仓库的贡献者
            community   每次的完善内容
            traffic 仓库访问量
            commit  托付的次数
            code frequency  提交代码频率
            network     查看分支创建情况
        settings    对仓库进行设置
            可以改名
            可以改为私有的仓库，需要输入仓库名进行验证
            可以删除仓库，需要输入验证
        issues
            可以对别人的代码提出修改意见
            可以查看被人提交的意见，回复或者屏蔽
        pull requests
            涉及fork知识点：
                fork 即复制到自己的仓库里
                    会显示：forked from xxxx
                    可以修改别人的代码，并提交到自己的本地仓库中
                    发送pull requests请求，new pull requests——》create pull requests——》说明标题，说明内容
                    在pull requests中查看新增的修改，在files changes中查看，若好用则合并，confirm merge
                watch 关注
                star 点赞


基于github搭建自己的blog
    一个博客需要如下多个步骤：
        1.域名
            阿里云域名
            .com.cn需要实名验证
        2.服务器
            自己搭建，买配置，买零部件，找联通申请宽带，7-8w
            租服务器，
                百度云
                阿里云6000元
        3.域名绑定服务器
        4.编写个人主页

    通过github可以创建免费的blog
        首先github建立特殊的个人仓库，会分配个人主页，地址是固定的。将域名与github的仓库绑定

        创建仓库
            名称为：myblog
            公开的
        克隆仓库到本地
        add、commit、push后
        仓库里面必须有index.html页面的入口，渲染的地方

        特殊化处理
            点settings
            github pages
                source（none表示不展示）
                    master branch
                        刷新后再找github pages查看地址http://fangjiarong.github.io/blog，只要服务器不挂机就可以访问
        解析到地址
            hexo
                博客引擎
            jekyll

    优秀博客作家：
        阮一峰
        廖雪峰


提交代码规范：
    1.每次提交之前：先更新，再提交
    2.敏感时间点，一定及时更新文件
        功能完成的敏感时间点
            同事做兼容式处理，响应式处理，重要功能更新
            不要下班前提交，避免冲突
        时间敏感点
            一天的早上，避免同事加班
            测试人员测出的bug

    3.多提交，避免“只关注写代码，不关注提交”现象
    4.每次提交必须书写清晰的提交说明
    5.不要提交不能通过编译的代码
    6.不要提交自己不明白的代码
    7.慎重使用锁定功能
    8.不要提交本地自动生成的文件或文件夹


关注tianyu，查看仓库的node